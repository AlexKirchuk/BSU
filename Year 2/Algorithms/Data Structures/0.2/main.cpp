/*
Напомним, что для компактного хранения в памяти компьютера
полного бинарного дерева на n вершинах можно использовать одномерный массив длины n.
Ключи вершин являются значениями элементов массива, индексация
начинается с единицы, при этом у элемента с индексом i сыновьями
являются элементы с индексами 2i и 2i + 1(если такие элементы существуют).
Бинарная куча — полное бинарное дерево, для которого выполняется
основное свойство структуры данных «куча»: элементы организованы
таким образом, что приоритет любой вершины не ниже приоритета каждого из её сыновей.
Будем предполагать, что среди элементов тот элемент имеет
наибольший приоритет, у которого ключевое значение меньше (Min-Heap).
Задан массив из n чисел. Необходимо проверить, может ли онпредставлять бинарную кучу.
Запрещается использовать специальные методы проверки
из стандартных библиотек (std::is_heap в C++ и пр.).

Input
В первой строке записано число n элементов в массиве (1 ≤ n ≤ 100 000).
Во второй строке через пробел записаны n целых чисел,
не превосходящих по модулю 10^9, — элементы массива.

Output
Выведите Yes, если существует бинарная куча,
которая в памяти представляется заданным массивом, или No иначе.
*/
#include <fstream>
#include <vector>

int main()
{
	std::ifstream in("input.txt");
	std::ofstream out("output.txt");

	int n;
	in >> n;

	std::vector<int> heap(n);
	for (int i = 0; i < n; i++)
	{
		in >> heap[i];
	}

	bool isHeap = true;
	for (int i = 0; 2 * i + 1 < n; i++)
	{
		if ((2 * i + 1 < n && heap[i] > heap[2 * i + 1]) ||
			(2 * i + 2 < n && heap[i] > heap[2 * i + 2]))
		{
			isHeap = false;
			break;
		}
	}

	if (isHeap)
	{
		out << "Yes";
	}
	else
	{
		out << "No";
	}
	return 0;
}